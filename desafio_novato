#include <stdio.h>

#define TAM_TABULEIRO 10
#define TAM_NAVIO 3

int main() {
    // 1. Criar o tabuleiro e inicializar com 0 (água)
    int tabuleiro[TAM_TABULEIRO][TAM_TABULEIRO] = {0};

    // 2. Definir coordenadas iniciais dos navios
    // Navio horizontal (linha, coluna inicial)
    int navioH_linha = 2;
    int navioH_coluna = 3;

    // Navio vertical (linha, coluna inicial)
    int navioV_linha = 5;
    int navioV_coluna = 7;

    // 3. Validar limites do tabuleiro para navio horizontal
    if (navioH_coluna + TAM_NAVIO > TAM_TABULEIRO) {
        printf("Erro: navio horizontal fora dos limites!\n");
        return 1; // encerra o programa com erro
    }

    // 4. Validar limites do tabuleiro para navio vertical
    if (navioV_linha + TAM_NAVIO > TAM_TABULEIRO) {
        printf("Erro: navio vertical fora dos limites!\n");
        return 1;
    }

    // 5. Posicionar navio horizontal no tabuleiro
    for (int i = 0; i < TAM_NAVIO; i++) {
        tabuleiro[navioH_linha][navioH_coluna + i] = 3;
    }

    // 6. Posicionar navio vertical no tabuleiro
    for (int i = 0; i < TAM_NAVIO; i++) {
        // Verificação simples para não sobrepor (opcional nesse nível)
        if (tabuleiro[navioV_linha + i][navioV_coluna] == 0) {
            tabuleiro[navioV_linha + i][navioV_coluna] = 3;
        } else {
            printf("Erro: navios se sobrepõem!\n");
            return 1;
        }
    }

    // 7. Exibir o tabuleiro
    printf("Tabuleiro de Batalha Naval:\n\n");
    for (int i = 0; i < TAM_TABULEIRO; i++) {
        for (int j = 0; j < TAM_TABULEIRO; j++) {
            printf("%d ", tabuleiro[i][j]);
        }
        printf("\n");
    }

    return 0;
}
