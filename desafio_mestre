#include <stdio.h>

#define TAM_TABULEIRO 10
#define NAVIO 3
#define HABILIDADE 5

int main() {
    int tabuleiro[TAM_TABULEIRO][TAM_TABULEIRO];
    int i, j;

    // 1. Inicializar tabuleiro com água (0)
    for(i = 0; i < TAM_TABULEIRO; i++) {
        for(j = 0; j < TAM_TABULEIRO; j++) {
            tabuleiro[i][j] = 0;
        }
    }

    // 2. Posicionar navios (simples para exemplo)
    tabuleiro[1][2] = NAVIO; tabuleiro[1][3] = NAVIO; tabuleiro[1][4] = NAVIO; // horizontal
    tabuleiro[4][5] = NAVIO; tabuleiro[5][5] = NAVIO; tabuleiro[6][5] = NAVIO; // vertical
    tabuleiro[6][0] = NAVIO; tabuleiro[7][1] = NAVIO; tabuleiro[8][2] = NAVIO; // diagonal
    tabuleiro[0][9] = NAVIO; tabuleiro[1][8] = NAVIO; tabuleiro[2][7] = NAVIO; // diagonal

    // 3. Definir matrizes de habilidade 5x5
    int cone[5][5] = {0};
    int cruz[5][5] = {0};
    int octaedro[5][5] = {0};

    // -----------------------------
    // 3a. Criar efeito cone (topo para baixo)
    // -----------------------------
    for(i = 0; i < 5; i++) {
        for(j = 0; j < 5; j++) {
            if(j >= 2 - i && j <= 2 + i) { // Expansão do cone
                cone[i][j] = 1;
            }
        }
    }

    // -----------------------------
    // 3b. Criar efeito cruz (cruz no centro)
    // -----------------------------
    for(i = 0; i < 5; i++) {
        for(j = 0; j < 5; j++) {
            if(i == 2 || j == 2) { // Linha e coluna do centro
                cruz[i][j] = 1;
            }
        }
    }

    // -----------------------------
    // 3c. Criar efeito octaedro (losango)
    // -----------------------------
    for(i = 0; i < 5; i++) {
        for(j = 0; j < 5; j++) {
            if(j >= 2 - i && j <= 2 + i && i <= 2) { // topo do losango
                octaedro[i][j] = 1;
            }
            if(j >= i - 2 && j <= 6 - i && i > 2) { // parte inferior do losango
                octaedro[i][j] = 1;
            }
        }
    }

    // 4. Ponto de origem no tabuleiro
    int origemConeLinha = 0, origemConeColuna = 2;   // topo do cone
    int origemCruzLinha = 5, origemCruzColuna = 5;   // centro da cruz
    int origemOctaedroLinha = 3, origemOctaedroColuna = 7; // centro do octaedro

    // 5. Aplicar habilidades ao tabuleiro
    // -----------------------------
    // 5a. Cone
    for(i = 0; i < 5; i++) {
        for(j = 0; j < 5; j++) {
            int linha = origemConeLinha + i - 0; // origem topo
            int coluna = origemConeColuna + j - 2; // ajustar para centro
            if(linha >= 0 && linha < TAM_TABULEIRO && coluna >=0 && coluna < TAM_TABULEIRO) {
                if(cone[i][j] == 1 && tabuleiro[linha][coluna] == 0) {
                    tabuleiro[linha][coluna] = HABILIDADE;
                }
            }
        }
    }

    // 5b. Cruz
    for(i = 0; i < 5; i++) {
        for(j = 0; j < 5; j++) {
            int linha = origemCruzLinha + i - 2; // ajustar para centro
            int coluna = origemCruzColuna + j - 2; 
            if(linha >= 0 && linha < TAM_TABULEIRO && coluna >=0 && coluna < TAM_TABULEIRO) {
                if(cruz[i][j] == 1 && tabuleiro[linha][coluna] == 0) {
                    tabuleiro[linha][coluna] = HABILIDADE;
                }
            }
        }
    }

    // 5c. Octaedro
    for(i = 0; i < 5; i++) {
        for(j = 0; j < 5; j++) {
            int linha = origemOctaedroLinha + i - 2;
            int coluna = origemOctaedroColuna + j - 2;
            if(linha >= 0 && linha < TAM_TABULEIRO && coluna >=0 && coluna < TAM_TABULEIRO) {
                if(octaedro[i][j] == 1 && tabuleiro[linha][coluna] == 0) {
                    tabuleiro[linha][coluna] = HABILIDADE;
                }
            }
        }
    }

    // 6. Mostrar tabuleiro com navios e habilidades
    printf("Tabuleiro de Batalha Naval - Nivel Mestre:\n\n");
    for(i = 0; i < TAM_TABULEIRO; i++) {
        for(j = 0; j < TAM_TABULEIRO; j++) {
            if(tabuleiro[i][j] == 0) printf("~ ");       // água
            else if(tabuleiro[i][j] == NAVIO) printf("N "); // navio
            else if(tabuleiro[i][j] == HABILIDADE) printf("X "); // habilidade
        }
        printf("\n");
    }

    return 0;
}
